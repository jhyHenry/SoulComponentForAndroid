apply plugin: 'cn.soul.component'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"


//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [host: "reader"]
//            }
//        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    resourcePrefix "readerbook_"
//
//    configurations {
//        all*.exclude group: 'com.android.support', module: 'support-v4'
//        all*.exclude group: 'com.android.support', module: 'support-annotations'
//    }

    configurations.all {
        resolutionStrategy {
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    releaseImplementation 'net.sf.json-lib:json-lib:2.4:jdk13'
    testImplementation 'junit:junit:4.12'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // https://mvnrepository.com/artifact/org.gradle/gradle-core
}

afterEvaluate {
//    println project.dependencies.artifactTypes.all {
//        println it.properties
//    }
    android.applicationVariants.all {
//        it.variantData.variantDependency.compileClasspath.resolve().forEach{
//            println it
//        }
//        if(it.variantData.name == "release")
//            return
//        it.variantData.getVariantDependency().getRuntimeElements().getAllDependencies().forEach{
//            println it
//        }
//        project.getConfigurations()["implementation"].allDependencies.all {
//            if (it instanceof DefaultSelfResolvingDependency) {
//                it.resolve().forEach {
//                    println it
//                }
//            } else {
//                println it.group + ":" + it.name + ":" + it.version
//            }
//        }
    }
}